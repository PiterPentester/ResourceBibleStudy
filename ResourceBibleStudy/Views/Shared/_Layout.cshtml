<!DOCTYPE html>
<html>
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width" />
    <title>@ViewBag.Title</title>
    @Styles.Render("~/Content/css")
    @Scripts.Render("~/bundles/modernizr")

    <link href="~/Content/font-awesome.min.css" rel="stylesheet">
    <link href="~/Content/datepicker3.css" rel="stylesheet">
    <link href="~/Content/daterangepicker-bs3.css" rel="stylesheet">
    <link href="~/Content/toastr.min.css" rel="stylesheet" />
</head>
<body class="gray-bg">
    <div class="navbar navbar-default navbar-fixed-top">
        <div class="container">
            <div class="navbar-header">
                <button type="button" class="navbar-toggle" data-toggle="collapse" data-target=".navbar-collapse">
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                    <span class="icon-bar"></span>
                </button>

                @Html.ActionLink("Resource Bible Study", "Index", "Home", null, new { @class = "navbar-brand" })
            </div>
            <div class="navbar-collapse collapse">
                <ul class="nav navbar-nav">
                    <li>@Html.ActionLink("Reading Plan", "Index", "DailyReading", new { area = "" }, null)</li>
                    <li>@Html.ActionLink("Group Discussion", "Index", "DiscussionForum", new { area = "" }, null)</li>
                    <li>@Html.ActionLink("API", "Index", "Help", new { area = "" }, null)</li>
                </ul>
            </div>
        </div>
    </div>
    <div class="container body-content">
        @RenderBody()
        <hr />
        <footer>
            <p>&copy; @DateTime.Now.Year - Resource Bible Study</p>
        </footer>
    </div>

    @Scripts.Render("~/bundles/jquery")
    @Scripts.Render("~/bundles/bootstrap")
    @RenderSection("scripts", required: false)
    <script src="~/Scripts/toastr.min.js"></script>
    <script src="~/Scripts/jquery.signalR-2.2.3.min.js"></script>
    <!--Reference the autogenerated SignalR hub script. -->
    <script src="~/signalr/hubs"></script>

    <!-- Data picker -->
    <script src="~/Scripts/bootstrap-datepicker.js"></script>
    <script type="text/javascript">
        //Switch Translation
        $('.switch-translation').click(function () {
            var chapterId = $("#chapterId").val();
            var bookId = $("#bookId").val();
            var url = $(this).data('url') + ("&chapterId=" + chapterId) + ("&bookId=" + bookId);
            $.ajax({
                type: "GET",
                url: url,
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    $("#readingTitle").html(response.readingTitle);
                    $("#readingContent").html(response.readingContent);
                    $("#chapterId").val(response.chapterId);
                    $("#bookId").val(response.bookId);
                    $("#current-translation-name").html(response.translation);
                    $("#current-translation").val(response.shortName);
                },
                error: function (error) {

                    alert(error);
                }
            });
        });

        //Next and previous control
        $('.next_previous_chapter').click(function () {
            var chapterId = $("#chapterId").val();
            var bookId = $("#bookId").val();
            var bibleVersion = $("#current-translation").val();
            $.ajax({
                type: "GET",
                url: $(this).data('url') + ("&chapterId=" + chapterId) + ("&bookId=" + bookId) + ("&bibleVersion=" + bibleVersion),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    $("#readingTitle").html(response.readingTitle);
                    $("#readingContent").html(response.readingContent);
                    $("#chapterId").val(response.chapterId);
                    $("#bookId").val(response.bookId);
                },
                error: function (error) {
                    alert(error);
                }
            });
        });

        //Next and previous controll
        $('.next_previous').click(function () {
            var timeOfTheDay = $("#timeOfTheDay").val();
            $.ajax({
                type: "GET",
                beforeSend: function () {
                    //App.blockUI({ target: "#blockui_1_portlet_body" });
                },
                url: $(this).data('url') + ("&timeOfTheDay=" + timeOfTheDay),
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {
                    //App.unblockUI("#blockui_1_portlet_body");
                    $("#readingTitle").html(response.readingTitle);
                    $("#readingContent").html(response.readingContent);
                    $("#currentDate").html(response.currentDate);
                    $("#timeOfTheDay").val(response.timeOfTheDay);
                    //  UINotific8.init(messageHeader, response.message, response.status);
                },
                error: function (error) {
                    //App.unblockUI("#blockui_1_portlet_body");
                    alert(error);
                    //UINotific8.init(messageHeader, error, false);
                }
            });
        });

        //Bible Search
        $(".bible-search").on("input keyup", function (e) {

            e.preventDefault();

            var search = $(this).val();
            var category = $(this).data("category");
            var bookId = $(this).data("bookid");

            var param = {
                search: search,
                category: category,
                bookId: bookId
            }

            //Send to Server Side
            $.ajax({
                type: "POST",
                beforeSend: function() {

                },
                url: '@Url.Action("search","Home")',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                data: JSON.stringify(param),
                success: function(data) {
                    if (data.status) {
                        $('#parent-books').html(data.searchResult);

                    }

                },
                error: function(err) {

                }
            });
        });
    </script>

    <script type="text/javascript">

        $(function () {


            // Declare a proxy to reference the hub.
            var chatHub = $.connection.chatHub;

            registerClientMethods(chatHub);

            // Start Hub
            $.connection.hub.start().done(function () {

                registerEvents(chatHub);

            });

        });

        function registerEvents(chatHub) {
            var userFullName = "", userImageUrl = "";

            $.ajax({
                type: "GET",
                url: '@Url.Action("AutoLoginUser","DiscussionForum")',
                contentType: "application/json; charset=utf-8",
                dataType: "json",
                success: function (response) {

                    userFullName = response.UserFullName;
                    userImageUrl = response.UserImageUrl;

                    //Only Connect when the user details comes back..
                    chatHub.server.connect(userFullName, userImageUrl);

                },
                error: function (error) {

                    toastr.error('Error Login In', error.message);
                }
            });


            $('#btnSendMsg').click(function () {

                var msg = $("#txtMessage").val();
                if (msg.length > 0) {

                    chatHub.server.sendMessageToAll(userFullName, msg, userImageUrl);
                    $("#txtMessage").val('');
                }
            });


            $("#txtMessage").keypress(function (e) {
                if (e.which == 13) {
                    $('#btnSendMsg').click();
                }
            });


        }

        function registerClientMethods(chatHub) {

            // Calls when user successfully logged in
            chatHub.client.onConnected = function (id, userName, allUsers, messages) {

                $('#hdId').val(id);
                $('#hdUserName').val(userName);
                $('#spanUser').html(userName);

                // Add All Users
                for (i = 0; i < allUsers.length; i++) {

                    AddUser(chatHub, allUsers[i].ConnectionId, allUsers[i].UserName, allUsers[i].UserImageUrl);
                }

                // Add Existing Messages
                for (i = 0; i < messages.length; i++) {

                    AddMessage(messages[i].UserName, messages[i].Message, messages[i].MessageDateTime, messages[i].UserImageUrl);
                }


            };

            // On New User Connected
            chatHub.client.onNewUserConnected = function (id, name, userImageUrl) {

                AddUser(chatHub, id, name, userImageUrl);

                toastr.success('Logged On', name);
            };


            // On User Disconnected
            chatHub.client.onUserDisconnected = function (id, userName) {

                $('#' + id).remove();

                var ctrId = 'private_' + id;
                $('#' + ctrId).remove();

                toastr.error('Logged Off', userName);

            };

            chatHub.client.messageReceived = function (userName, message, messagedatetime, userImageUrl) {

                AddMessage(userName, message, messagedatetime, userImageUrl);


            };


            chatHub.client.sendPrivateMessage = function (windowId, fromUserName, message) {

                var ctrId = 'private_' + windowId;


                if ($('#' + ctrId).length == 0) {

                    createPrivateChatWindow(chatHub, windowId, ctrId, fromUserName);

                }

                $('#' + ctrId).find('#divMessage').append('<div class="message"><span class="userName">' + fromUserName + '</span>: ' + message + '</div>');

                // set scrollbar
                var height = $('#' + ctrId).find('#divMessage')[0].scrollHeight;
                $('#' + ctrId).find('#divMessage').scrollTop(height);

            };

        }

        function AddUser(chatHub, id, name, userImageUrl) {

            var userId = $('#hdId').val();

            var code = "";

            if (userId == id) {

                code = $(
                    '<div class="chat-user">' +
                        '<span class="pull-right label label-primary">Online</span>' +
                       '<img class="chat-avatar" src="' + userImageUrl + '" alt="">' +
                                            '<div class="chat-user-name">' +
                                                '<a href="#">' + name + '</a>' +
                                            '</div>' +
                    '</div>'

                );

            }
            else {
                code = $(
                   '<div class="chat-user"+ id="' + id + '">' +
                       '<span class="pull-right label label-primary">Online</span>' +
                       '<img class="chat-avatar" src="' + userImageUrl + '" alt="">' +
                                           '<div class="chat-user-name">' +
                                               '<div  class="user" >' + name + '<div>' +
                                           '</div>' +
                   '</div>'

               );

                $(code).dblclick(function () {

                    var id = $(this).attr('id');

                    if (userId != id)
                        OpenPrivateChatWindow(chatHub, id, name);

                });
            }

            $("#divusers").append(code);

        }

        function AddMessage(userName, message, messagedatetime, userImageUrl) {
            $('#divChatWindow').append(
                '<div class="chat-message left">' +
                    '<img class="message-avatar" src="' + userImageUrl + '" alt="">' +
                           '<div class="message">' +
                                '<a class="message-author" href="#">' + userName + '</a>' +
                                        '<span class="message-date">' + messagedatetime + '</span>' +
                                        '<span class="message-content">' +
                                            message +
                                       '</span>' +
                                    '</div>' +
                 '</div>'
            );
            $('#LastMessageTime').html('Last message: ' + messagedatetime);

            var height = $('#divChatWindow')[0].scrollHeight;
            $('#divChatWindow').scrollTop(height);
        }

        function OpenPrivateChatWindow(chatHub, id, userName) {

            var ctrId = 'private_' + id;

            if ($('#' + ctrId).length > 0) return;

            createPrivateChatWindow(chatHub, id, ctrId, userName);

        }

        function createPrivateChatWindow(chatHub, userId, ctrId, userName) {

            var div = '<div id="' + ctrId + '" class="ui-widget-content draggable" rel="0">' +
                       '<div class="header">' +
                          '<div  style="float:right;">' +
                              '<img id="imgDelete"  style="cursor:pointer;" src="http://localhost/resourcecentre/Content/themes/inspinia/img/delete.png"/>' +
                           '</div>' +

                           '<span class="selText" rel="0">' + userName + '</span>' +
                       '</div>' +
                       '<div id="divMessage" class="messageArea">' +

                       '</div>' +
                       '<div class="buttonBar">' +
                          '<input id="txtPrivateMessage" class="msgText" type="text"   />' +
                          '<input id="btnSendMessage" class="submitButton button" type="button" value="Send"   />' +
                       '</div>' +
                    '</div>';

            var $div = $(div);

            // DELETE BUTTON IMAGE
            $div.find('#imgDelete').click(function () {
                $('#' + ctrId).remove();
            });

            // Send Button event
            $div.find("#btnSendMessage").click(function () {

                $textBox = $div.find("#txtPrivateMessage");
                var msg = $textBox.val();
                if (msg.length > 0) {

                    chatHub.server.sendPrivateMessage(userId, msg);
                    $textBox.val('');
                }
            });

            // Text Box event
            $div.find("#txtPrivateMessage").keypress(function (e) {
                if (e.which == 13) {
                    $div.find("#btnSendMessage").click();
                }
            });

            AddDivToContainer($div);

        }

        function AddDivToContainer($div) {
            $('#divContainer').prepend($div);

            $div.draggable({

                handle: ".header",
                stop: function () {

                }
            });


        }

    </script>

</body>
</html>
